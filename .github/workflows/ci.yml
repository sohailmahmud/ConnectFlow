name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test & Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.1'
        channel: 'stable'
        cache: true
        
    - name: Verify Flutter Installation
      run: flutter doctor -v
      
    - name: Get Dependencies
      run: flutter pub get
      
    - name: Verify Dependencies
      run: flutter pub deps
      
    - name: Analyze Code
      run: flutter analyze
      
    - name: Check Formatting
      run: dart format --set-exit-if-changed .
      
    - name: Run Unit Tests
      run: flutter test test/ --coverage --reporter=expanded
      
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.1'
        channel: 'stable'
        cache: true
        
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Get Dependencies
      run: flutter pub get
      
    # - name: Build Android APK
    #   run: flutter build apk --release
      
    # - name: Build Android App Bundle
    #   run: flutter build appbundle --release
      
    # - name: Upload Android Artifacts
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: android-builds
    #     path: |
    #       build/app/outputs/flutter-apk/app-release.apk
    #       build/app/outputs/bundle/release/app-release.aab

  build-ios:
    name: Build iOS
    runs-on: macos-latest
    needs: test
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.1'
        channel: 'stable'
        cache: true
        
    - name: Get Dependencies
      run: flutter pub get
      
    # - name: Build iOS (No Codesign)
    #   run: flutter build ios --release --no-codesign
      
    # - name: Upload iOS Artifacts
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: ios-build
    #     path: build/ios/iphoneos/Runner.app

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.1'
        channel: 'stable'
        cache: true
        
    - name: Get Dependencies
      run: flutter pub get
      
    - name: Run Security Audit
      run: flutter pub deps --json | dart pub global run pana --json
      continue-on-error: true

  integration-test:
    name: Integration Tests
    runs-on: macos-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.1'
        channel: 'stable'
        cache: true
        
    - name: Get Dependencies
      run: flutter pub get
      
    - name: Start iOS Simulator
      run: |
        xcrun simctl list devices
        xcrun simctl boot "iPhone 15" || true
        
    - name: Run Integration Tests
      run: flutter test integration_test/
      continue-on-error: true

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-android, build-ios]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, '[release]')
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Get Version
      id: version
      run: |
        VERSION=$(grep 'version:' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Download Android Artifacts
      uses: actions/download-artifact@v3
      with:
        name: android-builds
        path: ./artifacts/android
        
    - name: Download iOS Artifacts
      uses: actions/download-artifact@v3
      with:
        name: ios-build
        path: ./artifacts/ios
        
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.VERSION }}
        release_name: ConnectFlow v${{ steps.version.outputs.VERSION }}
        body: |
          ## What's Changed
          - ðŸ”§ Bug fixes and improvements
          - ðŸ“± Updated for latest Flutter version
          - ðŸ§ª Comprehensive test coverage
          
          ## Downloads
          - **Android APK**: app-release.apk
          - **Android App Bundle**: app-release.aab
          
          ## Installation
          Download the APK file and install on your Android device.
        draft: false
        prerelease: false